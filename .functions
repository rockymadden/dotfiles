function calc() {
  local result=$(printf "scale=10;$*\n" | bc --mathlib | tr -d '\\\n')

  if [[ "$result" == *.* ]]; then
    printf "$result" |
    sed -e 's/^\./0./' \
        -e 's/^-\./-0./' \
        -e 's/0*$//;s/\.$//'
  else
    printf "$result"
  fi

  printf "\n"
}

function cdf() {
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')"
}

function codepoint() {
  perl -e "use utf8; print sprintf('U+%04X', ord(\"$@\"))"

  if [ -t 1 ]; then
    echo ""
  fi
}

function dataurl() {
  local mimeType=$(file -b --mime-type "$1")

  if [[ $mimeType == text/* ]]; then
    mimeType="${mimeType};charset=utf-8"
  fi

  echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')"
}

function digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

function escape() {
  printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)

  if [ -t 1 ]; then
    echo ""
  fi
}

function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh
  else
    local arg=-sh
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@"
  else
    du $arg .[^.]* *
  fi
}

function mkd() {
  mkdir -p "$@" && cd "$_"
}

function slack-collaborator() {
  local url=$(git browse -u)
  local repo=$(git browse -u | sed -e 's|https://github.com/||g')

  slack send "*Collaborator state change:* ${1}" \
    --author="${repo}" \
    --author-icon='https://assets-cdn.github.com/images/modules/logos_page/Octocat.png' \
    --author-link="${url}" \
    --channel="${2}" \
    --color=good
}

function slack-pull-request() {
  local url=$(git browse -u)
  local repo=$(git browse -u | sed -e 's|https://github.com/||g')
  local desc=$(git issue | grep "${1}" | cut -d ']' -f2)

  slack send "*Pull request merged into master:* ${desc}" \
    --author="${repo}" \
    --author-icon='https://assets-cdn.github.com/images/modules/logos_page/Octocat.png' \
    --author-link="${url}" \
    --channel="${2}" \
    --color=good
}

function tarbz2() {
  tar -cjf $1.tar.bz $1
}

function targz() {
  local tmpFile="${@%/}.tar"
  tar -cvf "${tmpFile}" --exclude=".DS_Store" "${@}" || return 1

  size=$(
    stat -f"%z" "${tmpFile}" 2> /dev/null
    stat -c"%s" "${tmpFile}" 2> /dev/null
  )

  local cmd=""
  if (( size < 52428800 )) && hash zopfli 2> /dev/null; then
    cmd="zopfli"
  else
    if hash pigz 2> /dev/null; then
      cmd="pigz"
    else
      cmd="gzip"
    fi
  fi

  echo "Compressing .tar using \`${cmd}\`..."
  "${cmd}" -v "${tmpFile}" || return 1
  [ -f "${tmpFile}" ] && rm "${tmpFile}"
  echo "${tmpFile}.gz created successfully."
}

function title() {
  echo -ne "\033]0;"$*"\007"
}

function unidecode() {
  perl -e "binmode(STDOUT, ':utf8'); print \"$@\""

  if [ -t 1 ]; then
    echo ""
  fi
}
