[user]
	name = Rocky Madden
	email = git@rockymadden.com
[credential]
	helper = osxkeychain
[core]
	filemode = true
	ignorecase = false
	excludesfile = ~/.gitignore
[color]
	ui = auto
[push]
	default = simple
[alias]
	aliases = !git config -l | grep alias | cut -c 7-
	amend = commit -a --amend
	bugfix = ghflow-start
	cm = !git add -A && git commit -m
	co = checkout
	cob = checkout -b
	df = "!f() { git diff "$1"^.."$1"; }; f"
	done = ghflow-end
	eject = !git rollback && git checkout master && git rebase --abort
	feature = ghflow-start
	ghflow-clean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -I{} git branch -d {}; }; f"
	ghflow-end = "!f() { git checkout ${1-master} && git sync && git ghflow-clean ${1-master}; }; f"
	ghflow-start = !git ghflow-clean master && git cob
	graph = log --all --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	la = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat --date=short
	ls = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	normalize = remote rename origin gh
	redo = !git undo && git cm
	rollback = reset HEAD~1 --hard
	summary = !git log $(git log -1 --merges --pretty=format:%H)..HEAD --oneline
	sync = !git pull --rebase --prune $@ && git submodule update --init --recursive
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'wiped' && git rollback
